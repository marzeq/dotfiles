#!/usr/bin/env sh 

alias ls="ls --color=auto"
alias la="ls -A"
alias grep="grep --color=auto"

alias c="clear"

compress() {
  if [ "$#" -eq 0 ]; then
    echo "compress: no arguments specified"
    return 1
  fi

  if [ "$1" == "-xz" ]; then
    compression_flag="J"
    extension=".tar.xz"
    shift
  elif [ "$1" == "-gz" ]; then
    compression_flag="z"
    extension=".tar.gz"
    shift
  elif [ "$1" == "-zip" ]; then
    command="zip -qr "$2.zip" "${@:3}""
    echo $command
    $command
    return
  elif [[ "$1" == -* ]]; then
    echo "compress: invalid flag: $1"
    return 1
  else
    compression_flag="z"
    extension=".tar.gz"
  fi

  if [ "$#" -eq 1 ]; then
    archive_name=$(basename "$1")
    command="tar -c${compression_flag}f $archive_name${extension} $1"
  else
    archive_name="$1"
    command="tar -c${compression_flag}f $archive_name${extension} ${@:2}"
  fi

  echo $command
  eval $command
}

extract() {
  if [ "$#" -eq 0 ]; then
    echo "extract: no file(s) specified"
    return 1
  fi

  for file in "$@"; do
    if [ ! -f "$file" ]; then
      echo "extract: no such file: $file"
      continue
    fi

    if [[ "$file" == *.tar.gz ]]; then
      command="tar -xzf "$file""
    elif [[ "$file" == *.tar.xz ]]; then
      command="tar -xf "$file""
    elif [[ "$file" == *.zip ]]; then
      command="unzip -q "$file""
    else
      extension=".${file#*.}"
      echo "extract: unknown file type: $extension"
    fi

    echo $command
    eval $command
  done
}

cl() {
  cd $1 && ls
}

# wsl specific
if [ -n "$WSL_DISTRO_NAME" ]; then
  # funky stuff to make the .exe suffix optional which i personally like
  command_not_found_handle() {
    local cmd="$1"
    shift

    if command -v "${cmd}.exe" >/dev/null 2>&1; then
      "${cmd}.exe" "$@"
    else
      echo "$cmd: command not found"
      return 127
    fi
  }

  # for zsh compatibility
  command_not_found_handler() {
    command_not_found_handle "$@"
  }

  winhome() {
    echo $(wslpath $(wslvar "USERPROFILE"))
  }

  # cd command but you can provide a windows path, make sure you use quotes because many windows paths have spaces
  # doesn't work with relative paths, but that's kinda expected imo
  wincd() {
    if [ "$#" -eq 0 ]; then
      LOC=$(winhome)
    else
      LOC=$(wslpath ${1})
    fi

    cd "$LOC"
  }

  
fi
