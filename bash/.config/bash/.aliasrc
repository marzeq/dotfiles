#!/usr/bin/env bash

alias ls="ls --color=auto"
alias la="ls -a"
alias grep="grep --color=auto"

alias c="clear"

compress() {
  # check if there is at least one argument
  if [ "$#" -eq 0 ]; then
    echo "No file(s)/directory(-ies) specified"
    return 1
  fi

  # check if the first argument is either -xz, -gz or -zip
  
  # if the first argument is -xz, set the compression flag to -J and the extension to .tar.xz
  if [ "$1" == "-xz" ]; then
    compression_flag="J"
    extension=".tar.xz"
    shift
  elif [ "$1" == "-gz" ]; then
    compression_flag="z"
    extension=".tar.gz"
    shift
  elif [ "$1" == "-zip" ]; then
    # special case, use zip instead of tar
    command="zip -qr "$2.zip" "${@:3}""
    echo $command
    $command
    return
  # if the first argument starts with - but doesnt match, error out
  elif [[ "$1" == -* ]]; then
    echo "Invalid compression flag"
    return 1
  else
    # default to -z and .tar.gz
    compression_flag="z"
    extension=".tar.gz"
  fi

  # get count of real arguments, if it's one, assume it's the name of the directory and the archive name is the same as the directory
  if [ "$#" -eq 1 ]; then
    archive_name=$(basename "$1")
    command="tar -c${compression_flag}f $archive_name${extension} $1"
    echo $command
    $command
  # otherwise, assume the first argument is the name of the archive and the rest are the directories/files to compress
  else
    archive_name="$1"
    command="tar -c${compression_flag}f $archive_name${extension} ${@:2}"
    echo $command
    $command
  fi
}

extract() {
  # check if there is at least one argument
  if [ "$#" -eq 0 ]; then
    echo "No file(s) specified"
    return 1
  fi

  # loop through all the arguments
  for file in "$@"; do
    # check if the file exists
    if [ ! -f "$file" ]; then
      echo "$file: No such file"
      continue
    fi

    # recognise the file extension
    # if it's .tar.gz, use -xzf
    if [[ "$file" == *.tar.gz ]]; then
      tar -xzf "$file"
    # if it's .tar.xz, use -xf
    elif [[ "$file" == *.tar.xz ]]; then
      tar -xf "$file"
    # if it's .zip, use unzip
    elif [[ "$file" == *.zip ]]; then
      unzip -q "$file"
    else
      echo "$file: Unknown file type"
    fi
  done
}

command_not_found_handle() {
  local cmd="$1"
  shift

  if command -v "${cmd}.exe" >/dev/null 2>&1; then
    "${cmd}.exe" "$@"
  else
    echo "$cmd: command not found"
    return 127
  fi
}
